nameOverride: ""
fullnameOverride: ""

replicaCount: 1

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: istio
    # kubernetes.io/tls-acme: "true"
  paths:
    application: /api
    web: /
  basePath: /
  hosts: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

application:
  image:
    repository: banzaicloud/backyards
    tag: 1.1.3
    pullPolicy: Always

  env: {}
  envSecrets: []
  envConfigMaps: []
  envResourceField: []

  service:
    type: ClusterIP
    port: 80

web:
  enabled: false
  image:
    repository: banzaicloud/backyards-web
    tag: 1.1.3
    pullPolicy: Always

  env: {}
  envSecrets: []
  envConfigMaps: []
  envResourceField: []

  resources: {}

  service:
    type: ClusterIP
    port: 80

istio:
  CRName: mesh
  namespace: istio-system

prometheus:
  enabled: false
  host: prometheus
  url:
  replicas: 1
  image:
    repository: prom/prometheus
    tag: v2.16.0
    pullPolicy: IfNotPresent
  resources:
    {}
    # limits:
    #   cpu: 200m
    #   memory: 50Mi
    # requests:
    #   cpu: 100m
    #   memory: 30Mi
  config:
    global:
      scrapeInterval: 10s
      scrapeTimeout: 10s
      evaluationInterval: 10s
  service:
    type: ClusterIP
    port: 59090
  inMesh: true

kubestatemetrics:
  enabled: false
  replicas: 1
  image:
    repository: quay.io/coreos/kube-state-metrics
    tag: v1.9.4
    pullPolicy: IfNotPresent
  ports:
    monitoring: 42422
    telemetry: 15014
  service:
    monitoringPort: 42422
    telemetryPort: 15014
  resources:
    {}
    # limits:
    #   cpu: 200m
    #   memory: 50Mi
    # requests:
    #   cpu: 100m
    #   memory: 30Mi

grafana:
  enabled: true
  replicas: 1
  image:
    repository: grafana/grafana
    tag: 6.6.1
    pullPolicy: IfNotPresent
  resources: {}
  security:
    enabled: false
  plugins:
  - grafana-piechart-panel

tracing:
  enabled: true
  externalUrl: /jaeger
  provider: jaeger
  jaeger:
    image:
      repository: docker.io/jaegertracing/all-in-one
      tag: 1.16
      pullPolicy: IfNotPresent
    memory:
      max_traces: 50000
    # spanStorageType value can be "memory" and "badger" for all-in-one image
    spanStorageType: badger
    persist: false
    storageClassName: ""
    accessMode: ReadWriteMany
  service:
    annotations: {}
    name: backyards-zipkin
    type: ClusterIP
    externalPort: 59411
  mtls:
    enabled: true
  multiCluster:
    enabled: true

# requires certmanager to be present and functional for the actual namespace
auditsink:
  enabled: false
  image:
    repository: fluent/fluentd
    tag: v1.7-1
    pullPolicy: IfNotPresent
  resources:
  tolerations:
  mode: http
  http:
    timeout: 1s
    retryWaitMin: 500ms
    retryWaitMax: 1s
    retryMax: 3
    panicOnFailure: false

ingressgateway:
  meshgateway:
    enabled: true
  service:
    type: ClusterIP

certmanager:
  # Required if auditsink is enabled.
  enabled: false

auth:
  # One of anonymous or impersonation.
  mode: anonymous
  # The jwt signing key will be generated from the service account token,
  # but can be overridden to use the following secret.
  #jwtSigningKeySecret:
  #  name:
  #  key:

impersonation:
  enabled: false
  # Impersonation is configured by default to allow impersonating any user/group/sa in the system with any scope,
  # but can be customized with the `config` field.
  #  config:
  #    users: ["jane.doe@example.com"]
  #    groups: ["developers","admins"]
  #    serviceaccounts: ["system:serviceaccount:default:default"]
  #    scopes: ["view", "development"]

als:
  enabled: true
  replicas: 1
  image:
    repository: banzaicloud/backyards-als
    tag: 0.0.1
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 30Mi
    # limits:
    #   cpu: 200m
    #   memory: 50Mi
  service:
    type: ClusterIP
    port: 50600
  mtls:
    enabled: true
  multiCluster:
    enabled: true
