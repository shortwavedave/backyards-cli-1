{{- if and (not .Values.ingressgateway.meshgateway.enabled) .Values.ingressgateway.enabled -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ingressgateway.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "ingressgateway.name" . }}
    app.kubernetes.io/name: {{ include "ingressgateway.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: ingressgateway
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ingressgateway.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "ingressgateway.name" . }}
    app.kubernetes.io/name: {{ include "ingressgateway.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: ingressgateway
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ include "ingressgateway.name" . }}
      app.kubernetes.io/name: {{ include "ingressgateway.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: ingressgateway
      app.kubernetes.io/part-of: {{ include "backyards.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: {{ include "ingressgateway.name" . }}
        app.kubernetes.io/name: {{ include "ingressgateway.name" . }}
        helm.sh/chart: {{ include "backyards.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
        app.kubernetes.io/component: ingressgateway
        app.kubernetes.io/part-of: {{ include "backyards.name" . }}
    spec:
      containers:
        - args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --log_output_level
            - info
            - --drainDuration
            - 45s
            - --parentShutdownDuration
            - 1m0s
            - --connectTimeout
            - 10s
            - --serviceCluster
            - istio-ingressgateway
            - --proxyAdminPort
            - "15000"
            - --statusPort
            - "15020"
            - --controlPlaneAuthPolicy
            - MUTUAL_TLS
            - --discoveryAddress
            - istio-pilot.istio-system:15011
            - --zipkinAddress
            - zipkin.istio-system:9411
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
          image: docker.io/istio/proxyv2:1.1.8
          imagePullPolicy: Always
          name: istio-proxy
          ports:
            - containerPort: 15020
              name: status-port
              protocol: TCP
            - containerPort: 80
              name: http2
              protocol: TCP
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/certs
              name: istio-certs
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ include "ingressgateway.fullname" . }}
      serviceAccountName: {{ include "ingressgateway.fullname" . }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.{{ include "ingressgateway.fullname" . }}
{{- end }}
